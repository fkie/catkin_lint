#!/usr/bin/make -f
# -*- makefile -*-
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

include /usr/share/dpkg/pkg-info.mk

actual_version:=$(shell PYTHONPATH=src python3 -c "from catkin_lint import __version__; print(__version__)")
debianized_version:=$(subst a,~a,$(subst b,~b,$(actual_version)))

ifneq ($(DEB_VERSION_UPSTREAM),$(debianized_version))
$(error Package version $(DEB_VERSION_UPSTREAM) does not match actual version $(debianized_version))
endif

export PYBUILD_NAME=catkin-lint
export PYBUILD_DESTDIR = debian/catkin-lint
export PYBUILD_INSTALL_ARGS = --install-lib=/usr/share/catkin-lint

%:
	dh $@ --with python3 --buildsystem=pybuild

execute_after_dh_auto_install:
	mv debian/catkin-lint/usr/bin/catkin_lint debian/catkin-lint/usr/share/catkin-lint/run
	rm -r debian/catkin-lint/usr/share/catkin-lint/*.egg-info

execute_before_dh_installman: debian/catkin_lint.1
	true

debian/catkin_lint.1: catkin_lint.pod
	pod2man --release="$(actual_version)" --center="Robot OS" $< > $@

# The following targets are for the maintainer's convenience:

make-orig-tar:
	git config tar.tar.xz.command "xz -c"
	git archive --prefix=catkin_lint-$(actual_version)/ -o ../catkin-lint_$(debianized_version).orig.tar.xz $(shell git merge-base debian $(actual_version) )

make-patches:
	rm -rf debian/patches
	mkdir debian/patches
	git format-patch -o debian/patches $(shell git merge-base debian $(actual_version) )..master
	ls debian/patches/[0-9]* | sed -e 's/^debian\/patches\///' > debian/patches/series

clean-patches:
	rm -rf debian/patches
